<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name></display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- log4j配置 -->
	<!-- 可以通过${webapp.root}来定位到服务器的发布的该项目下 -->
	<!-- 如果有多个web应用，怕webapp.root变量重复，可以在context-param里定义webAppRootKey -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webAppFastBeyond.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!-- 容器会每60秒扫描log4j的配置文件 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

    <!-- EncodingFilter -->
	<filter>
		<filter-name>Set Character Encoding</filter-name>
		<filter-class>com.beyond.tools.EncodingFilter</filter-class>
		<init-param>
			<param-name>charset</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Set Character Encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- FilterDemo  jsp  action  html -->
	<filter>
		<filter-name>Filter</filter-name>
		<filter-class>com.beyond.tools.FilterDemo</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>Filter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>FilterDemo</filter-name>
		<filter-class>com.beyond.tools.FilterDemo</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>FilterDemo</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>FilterHtml</filter-name>
		<filter-class>com.beyond.tools.FilterDemo</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>FilterHtml</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>



	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext*.xml</param-value>
	</context-param>
	
	<!-- 与spring配合使用时，本加载需要放在spring前面 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- openSessionInView -->
	<filter>
		<filter-name>lazyLoadingFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>lazyLoadingFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<!-- Struts2 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>struts-default.xml,struts-plugin.xml,../struts.xml</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<!-- 定时器 -->
	<listener>
		<listener-class>com.beyond.tools.SessionListener</listener-class>
	</listener>
	
	<!-- 设置session超时  -->
    <session-config>
    	<session-timeout>60</session-timeout><!-- 默认时间为分钟 -->
    </session-config> 
	<!-- end -->

</web-app>
